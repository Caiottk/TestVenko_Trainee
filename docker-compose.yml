services:
  web1:
    build: ./webserver
    environment:
      - INSTANCE=web1
    ports:
      - "5001:5000"
    networks:
      - app-network
    container_name: web1

  web2:
    build: ./webserver
    environment:
      - INSTANCE=web2
    ports:
      - "5002:5000"
    networks:
      - app-network
    container_name: web2

  loadbalancer:
    image: nginx:latest
    ports:
      - "80:80"
    volumes:
      - ./loadbalancer/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - web1
      - web2
    networks:
      - app-network
    container_name: loadbalancer

  monitor:
    build: ./monitor
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
    depends_on:
      db:
        condition: service_healthy
    networks:
      - app-network
    container_name: monitor

  db:
    build: ./db
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: monitoring
    ports:
      - "3306:3306"
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 3
    networks:
      - app-network
    volumes:
      - db_data:/var/lib/mysql
    container_name: db

  db_backup:
    image: mysql:5.7
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: monitoring
    ports:
      - "3307:3306"
    networks:
      - app-network
    volumes:
      - db_backup_data:/var/lib/mysql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 3
    container_name: db_backup

volumes:
  db_data:
  db_backup_data:

networks:
  app-network:
    driver: bridge
